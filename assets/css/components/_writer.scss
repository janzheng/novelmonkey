

$writer-width: usetheme(writer-width, $novelmonkey);
$writer-padding: $size;
$writer-radius: $size-half;


/* 

  Basic mode / in-page mode

 */
.Writer {
  overflow-anchor: none;
  min-height: 70vh;
  position: relative;
  @extend ._depth-400;

  max-width: $writer-width;
  margin: 0 auto;
  padding: $size $size-2;
  border-radius: $writer-radius;
  background-color: v(writer-bg);


  // @extend %ease-fast;
  &.--grow {
    @extend %ease-fast;
    position: fixed;
    height: 100%;
    max-width: 100%;
    width: 100%;
    top: 0;
    left: 0;
    z-index: 200;
    overflow: scroll;

    .Renderer-content {
      padding-bottom: $size-8;
    }
  }

  &.--zen { 
    &.--grow {
      .Renderer-content {
        padding-bottom: 0;
        margin-bottom: -$size-5;
      }
    }
    &.--fullscreen {
      .Renderer-content {
        padding-bottom: 0;
        margin-bottom: -$size-5;
      }
    }
  }}



.Renderer {

  &.--zen {
    // this is required to make it feel clickable during zen
    // since you click to turn off zen mode 
    cursor: pointer;
  }
}
  .Renderer-menu {
    margin-bottom: $size-4;
    z-index: 200;
    opacity: 1;

    input {
      color: v(input-color);
      background-color: v(writer-input-bg);
      &:focus, &:active {
        border-color: v(input-border);
      }
    }

    @include input-placeholder {
      color: v(input-color-placeholder);
    }

    // input focused should lighten the menu
    &.--focused {
      opacity: v(input-focus-opacity);
    }

    @include screen-sm {
      position: sticky;
      top: $size-half;
    }
    @include screen-xs {
      display: block;
    }

    // annoying going from regular to full screen, menu will slowly move right: 
    // this can probably be fixed with better design later
    &, * {
      // transition: none;
    }
    &:hover {
      opacity: 1;
    }

    button, ._button {
      height: 100%;
    }

    &.--zen {
      opacity: 0 !important;
    }
  }

  .Renderer-overlay {
    z-index: 10;
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    visibility: hidden;

    // message
    span {
      position: sticky;
      top: 100px;
      bottom: 100px;
    }

    &.--show {
      visibility: visible;
      opacity: 1;
    }
  }
  .--daylight {
    .Renderer-overlay {
      background-color: rgba(usetheme(white, $colors_), 0.92);
    }
  }


  // when blank, this is the call to write. also instructions?
  .Renderer-cta {
    position: absolute;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .Renderer-name { // input for novel name
    padding: 0 $size-half;
    border: none;
    align-items: center;
    /* justify-content: center; */
    vertical-align: bottom;
    // height: $size-2 + 2px; // slight misalign
    height: 100%;
    border-bottom: v(input-bg) solid 2px;
    border-radius: $radius;

    @include screen-xs {
      margin-bottom: $size;
    }

    // @extend %ease;

    &:hover {
      background: v(input-bg-active);
      @extend %ease;
    }

    &:focus {
      background: v(input-bg-active);
      border-bottom: v(input-bg-active) solid 2px;
      @extend %ease;
    }
  }

  .Renderer-content {

    color: v(writer-color);
    padding-bottom: $size-3;
    text-shadow: none;

    // magical # for now
    max-width: 95%;
    margin: 0 auto;

    // inherits the customizable container style
    p {
      font-family: inherit;
      font-size: inherit;
      line-height: inherit;
    }
  }
    .Renderer.--zen {
      .Renderer-content {
        text-shadow: v(writer-zen-shadow);
        color: transparent;
      }
    }


// used to place the scroll-to position
.Writer-bottom {
  position: absolute;
  bottom: -110px;
}


// Typefaces
.--sans {
  @extend %font-sans;
  // transition: unset !important;
  // -webkit-transition: unset !important;
}
.--serif {
  @extend %font-serif;
  
  &, *, .button.--text {
    font-size: $size-serif;
    line-height: $lineheight-serif;
  }
  // transition: unset !important;
  // -webkit-transition: unset !important;
}
.--mono {
  @extend %font-mono;
  // transition: unset !important;
  // -webkit-transition: unset !important;

  &, *, .button.--text {
    font-size: $size-mono;
    line-height: $lineheight-mono;
  }
}


/* 

  Full Screen mode

 */

.Writer.--fullscreen {
  overflow: scroll;

  .Renderer-content {
    margin-bottom: $size-10;
  }

}




























  .Inputter {
    position: sticky;
    bottom: $size;
    width: 100%;
    padding: 0;
    // @include ease($speed-medium);
    // transition-property: all;

    // calculated dynamically, for mobile keyboard layouts
    @include screen-xs {
      bottom: var(--inputxs);
    }

    input {
      font-size: usetheme(input-size, $novelmonkey);
      outline: none;
      box-shadow: none;
      color: v(input-color);
      border-color: v(input-border);

      @include input-placeholder {
        color: v(input-color-placeholder);
      }

      & {
        // @extend %ease;
        background-color: v(writer-input-bg);
        height: usetheme(input-height, $novelmonkey);
        @extend %ease-fast;
        transition-property: height;
      }
      &:hover {
        background-color: v(input-bg-active);
        border-color: v(input-border-hover);
        @extend %ease-fast;
      }
      &:focus, &:active {
        @extend %ease-fast;
        background-color: v(writer-input-bg) !important;
        border-color: v(input-border-active);
        height: usetheme(input-height-active, $novelmonkey);
        box-shadow: none;
        @include input-placeholder {
          color: transparent;
        }
      }
    }

    // zen mode 
    &.--zen {
      // @include ease($speed-medium);
      // transition-property: all;

      // position: fixed;
      width: 100%;
      // bottom: 100px; // 14%;
      bottom: 40%;
      left: 0;
      margin: 0 auto;
      // padding: 5%;

      input {
        padding: $size-2;
        height: usetheme(input-height-zen, $novelmonkey);
        font-size: usetheme(input-size-zen, $novelmonkey);

        &:focus, &:active {
          height: usetheme(input-height-zen-active, $novelmonkey);
        }
      }
        &.--serif { input {
          font-size: usetheme(input-size-zen-serif, $novelmonkey);
        }}
    }

    &.--fullscreen.--zen {
      bottom: 40%;
    }

    &.--serif { input {
        font-size: usetheme(input-size-serif, $novelmonkey);
        @extend %ease-fast;
    }}

  }






